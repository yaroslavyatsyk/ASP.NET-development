// <auto-generated />
using System;
using Contact_Manager_APP.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Contact_Manager_APP.Migrations
{
    [DbContext(typeof(ContactContext))]
    [Migration("20220216155349_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Contact_Manager_APP.Models.Category", b =>
                {
                    b.Property<int?>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("CategoryID"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryID = 1,
                            Name = "Family"
                        },
                        new
                        {
                            CategoryID = 2,
                            Name = "Friend"
                        },
                        new
                        {
                            CategoryID = 3,
                            Name = "Work"
                        },
                        new
                        {
                            CategoryID = 4,
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("Contact_Manager_APP.Models.Contact", b =>
                {
                    b.Property<int>("ContactID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContactID"), 1L, 1);

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Organization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContactID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            ContactID = 1,
                            CategoryID = 1,
                            DateAdded = new DateTime(2022, 2, 16, 10, 53, 48, 736, DateTimeKind.Local).AddTicks(1602),
                            Email = "Yaroslav.Yatsyk@hotmail.com",
                            FirstName = "Yaroslav",
                            LastName = "Yatsyk",
                            Phone = "647-891-1161"
                        },
                        new
                        {
                            ContactID = 2,
                            CategoryID = 2,
                            DateAdded = new DateTime(2022, 2, 16, 10, 53, 48, 736, DateTimeKind.Local).AddTicks(1648),
                            FirstName = "Ostap",
                            LastName = "Sulyk",
                            Phone = "647-784-5444"
                        });
                });

            modelBuilder.Entity("Contact_Manager_APP.Models.Contact", b =>
                {
                    b.HasOne("Contact_Manager_APP.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
